{
  "name": "unikraft-ide-vscode",
  "displayName": "Unikraft VSCode Extension",
  "description": "Seamlessly build and manage Unikraft components from within VSCode!",
  "version": "0.1.1",
  "publisher": "unikraft",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/unikraft/ide-vscode.git"
  },
  "homepage": "https://github.com/unikraft/ide-vscode/main/README.md",
  "engines": {
    "vscode": "^1.59.0"
  },
  "keywords": [
    "unikraft",
    "unikernel"
  ],
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onView:externalLibraries"
  ],
  "icon": "media/unikraft-logo.png",
  "galleryBanner": {
    "color": "#0E2F5F",
    "theme": "dark"
  },
  "main": "./out/extension.js",
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Unikraft",
      "properties": {
        "unikraft.sources": {
          "type": "string",
          "default": "",
          "description": "Specifies the directory where all the packages are stored, By default it is set by environment variable KRAFTKIT_PATHS_SOURCES or file `$HOME/.config/kraftkit/config.yaml`."
        },
        "unikraft.manifests": {
          "type": "string",
          "default": "",
          "description": "Specifies the directory where all the manifests are stored, By default it is set by environment variable KRAFTKIT_PATHS_MANIFESTS or file `$HOME/.config/kraftkit/config.yaml`."
        },
        "unikraft.detach": {
          "type": "boolean",
          "default": false,
          "description": "Whether to run unikernel in background"
        },
        "unikraft.disableAccel": {
          "type": "boolean",
          "default": false,
          "description": "Whether to disable acceleration of CPU (usually enables TCG)"
        },
        "unikraft.symbolic": {
          "type": "boolean",
          "default": false,
          "description": "Whether to use the debuggable (symbolic) unikernel"
        },
        "unikraft.remove": {
          "type": "boolean",
          "default": false,
          "description": "Whether to automatically remove the unikernel when it shutsdown"
        },
        "unikraft.ip": {
          "type": "string",
          "default": "",
          "description": "Assign the provided IP address"
        },
        "unikraft.memory": {
          "type": "string",
          "default": "64M",
          "description": "Assign MB memory to the unikernel"
        },
        "unikraft.network": {
          "type": "string",
          "default": "",
          "description": "Attach instance to the provided network in the format <driver>:<network>"
        },
        "unikraft.ports": {
          "type": "array",
          "default": [],
          "description": "Publish a machine's port(s) to the host"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "package-explorer",
          "title": "Package Explorer",
          "icon": "media/unikraft-u.svg"
        }
      ]
    },
    "views": {
      "package-explorer": [
        {
          "id": "externalLibraries",
          "name": "External Libraries",
          "icon": "media/unikraft-u.svg",
          "contextualTitle": "Package Explorer"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "externalLibraries.addLibrary",
          "when": "view == externalLibraries",
          "group": "navigation"
        },
        {
          "command": "externalLibraries.refreshEntry",
          "when": "view == externalLibraries",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "externalLibraries.removeLibrary",
          "when": "view == externalLibraries && viewItem == library"
        },
        {
          "command": "externalLibraries.purgeLibrary",
          "when": "view == externalLibraries && viewItem == library"
        }
      ]
    },
    "commands": [
      {
        "command": "unikraft.initialize",
        "title": "Initialize project",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.configure",
        "title": "Configure project",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.build",
        "title": "Build project",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.run",
        "title": "Run project",
        "category": "Unikraft"
      },
      {
        "command": "unikraft.update",
        "title": "Update",
        "category": "Unikraft"
      },
      {
        "command": "externalLibraries.addLibrary",
        "title": "Add library",
        "icon": {
          "light": "resources/light/add.svg",
          "dark": "resources/dark/add.svg"
        }
      },
      {
        "command": "externalLibraries.removeLibrary",
        "title": "Remove library"
      },
      {
        "command": "externalLibraries.purgeLibrary",
        "title": "Purge library"
      },
      {
        "command": "externalLibraries.refreshEntry",
        "title": "Refresh",
        "icon": {
          "light": "resources/light/refresh.svg",
          "dark": "resources/dark/refresh.svg"
        }
      }
    ]
  },
  "extensionPack": [
    "ms-vscode.cpptools",
    "ms-python.python"
  ],
  "scripts": {
    "vscode:prepublish": "npm install && npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.2.2",
    "@types/node": "14.x",
    "@types/vscode": "^1.59.0",
    "@typescript-eslint/eslint-plugin": "^4.26.0",
    "@typescript-eslint/parser": "^4.26.0",
    "eslint": "^7.27.0",
    "glob": "^7.1.7",
    "mocha": "^9.2.0",
    "typescript": "^4.3.2",
    "vscode-test": "^1.5.2",
    "winston": "^3.3.3"
  },
  "dependencies": {
    "command-exists": "^1.2.9",
    "js-yaml": "^4.1.0",
    "yaml": "^2.3.1"
  }
}
